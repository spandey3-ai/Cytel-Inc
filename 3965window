
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> load("C:\\Users\\Shivam-pc\\Desktop\\Ming")
Error: bad restore file magic number (file may be corrupted) -- no data loaded
In addition: Warning message:
file ‘Ming’ has magic number 'ima3,'
  Use of save versions prior to 2 is deprecated 
> mdata <- read.table("C:\\Users\\Shivam-pc\\Desktop\\InventoryData.txt", sep = "\t", header=TRUE)
> str(mdata)
'data.frame':   533147 obs. of  15 variables:
 $ Brand            : Factor w/ 2 levels "Brand A","Brand B": 1 1 1 1 1 1 1 1 1 1 ...
 $ Product          : int  8377 8377 8377 8377 8377 8377 8377 8377 8377 8377 ...
 $ DC               : int  393 393 393 393 393 393 393 393 393 393 ...
 $ TradingPartner   : int  67 67 67 67 67 67 67 67 67 67 ...
 $ ReportingDate    : Factor w/ 1998 levels "01-APR-11","01-APR-12",..: 1718 1783 1848 1909 1962 63 129 195 261 327 ...
 $ QuantityAvailable: int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityCommitted: int  0 0 0 0 0 0 0 0 0 0 ...
 $ TotalMorgue      : int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantitySold     : int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityOnOrder  : int  12 12 12 12 12 12 12 12 12 12 ...
 $ QuantityForecast : num  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityEnding   : int  0 0 0 0 0 0 0 0 0 0 ...
 $ LostSaleQuantity : int  0 0 0 0 0 0 0 0 0 0 ...
 $ DaysOnHand       : int  0 0 0 0 0 0 0 0 0 0 ...
 $ WAC              : num  188 188 188 188 188 ...
> head(mdata$ReportingDate,10)
 [1] 27-AUG-12 28-AUG-12 29-AUG-12 30-AUG-12 31-AUG-12 01-SEP-12 02-SEP-12
 [8] 03-SEP-12 04-SEP-12 05-SEP-12
1998 Levels: 01-APR-11 01-APR-12 01-APR-13 01-APR-14 01-APR-15 ... 31-OCT-15
> mdata$ReportingDate <- strptime(mdata$ReportingDate, format="%d-%b-%y")
> #create two new cols year and mon
> mdata$ReportingYear <- as.numeric(format(mdata$ReportingDate, "%Y"))
> mdata$ReportingMon <- as.numeric(format(mdata$ReportingDate, "%m"))
> str(mdata)
'data.frame':   533147 obs. of  17 variables:
 $ Brand            : Factor w/ 2 levels "Brand A","Brand B": 1 1 1 1 1 1 1 1 1 1 ...
 $ Product          : int  8377 8377 8377 8377 8377 8377 8377 8377 8377 8377 ...
 $ DC               : int  393 393 393 393 393 393 393 393 393 393 ...
 $ TradingPartner   : int  67 67 67 67 67 67 67 67 67 67 ...
 $ ReportingDate    : POSIXlt, format: "2012-08-27" "2012-08-28" ...
 $ QuantityAvailable: int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityCommitted: int  0 0 0 0 0 0 0 0 0 0 ...
 $ TotalMorgue      : int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantitySold     : int  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityOnOrder  : int  12 12 12 12 12 12 12 12 12 12 ...
 $ QuantityForecast : num  0 0 0 0 0 0 0 0 0 0 ...
 $ QuantityEnding   : int  0 0 0 0 0 0 0 0 0 0 ...
 $ LostSaleQuantity : int  0 0 0 0 0 0 0 0 0 0 ...
 $ DaysOnHand       : int  0 0 0 0 0 0 0 0 0 0 ...
 $ WAC              : num  188 188 188 188 188 ...
 $ ReportingYear    : num  2012 2012 2012 2012 2012 ...
 $ ReportingMon     : num  8 8 8 8 8 9 9 9 9 9 ...
> attach(mdata)
> aggdata <- aggregate(QuantitySold,by=list(Product,ReportingYear,ReportingMon), FUN=sum, na.rm=TRUE)
> detach(mdata)
> str(aggdata)
'data.frame':   143 obs. of  4 variables:
 $ Group.1: int  3965 3965 3965 8377 3965 8377 14563 3965 8377 14563 ...
 $ Group.2: num  2011 2012 2013 2013 2014 ...
 $ Group.3: num  1 1 1 1 1 1 1 1 1 1 ...
 $ x      : int  72618 37672 83486 157 72705 664 136 30935 1367 149733 ...
> head(aggdata, 20)
   Group.1 Group.2 Group.3      x
1     3965    2011       1  72618
2     3965    2012       1  37672
3     3965    2013       1  83486
4     8377    2013       1    157
5     3965    2014       1  72705
6     8377    2014       1    664
7    14563    2014       1    136
8     3965    2015       1  30935
9     8377    2015       1   1367
10   14563    2015       1 149733
11    3965    2016       1  13927
12    8377    2016       1   3525
13   14563    2016       1 167406
14    3965    2011       2  68024
15    3965    2012       2  69963
16    3965    2013       2  74144
17    8377    2013       2    217
18    3965    2014       2  59422
19    8377    2014       2    638
20   14563    2014       2  11788
> colnames(aggdata) <- c("Product","ReportingYear","ReportingMon", "QuantitySold")
> attach(aggdata)
> aggdata <- aggdata[order(Product,ReportingYear,ReportingMon),]
> TruncData1<-subset(aggdata,Product==3965)
> TruncData1
    Product ReportingYear ReportingMon QuantitySold
1      3965          2011            1        72618
14     3965          2011            2        68024
27     3965          2011            3        92103
40     3965          2011            4        66307
53     3965          2011            5        73861
66     3965          2011            6        82774
79     3965          2011            7        80195
89     3965          2011            8        63635
100    3965          2011            9        55061
111    3965          2011           10        51745
122    3965          2011           11        53884
133    3965          2011           12        61343
2      3965          2012            1        37672
15     3965          2012            2        69963
28     3965          2012            3        79185
41     3965          2012            4        82811
54     3965          2012            5        84138
67     3965          2012            6        82917
80     3965          2012            7        88374
90     3965          2012            8       101550
101    3965          2012            9        95066
112    3965          2012           10        96850
123    3965          2012           11       100456
134    3965          2012           12        98621
3      3965          2013            1        83486
16     3965          2013            2        74144
29     3965          2013            3        86490
42     3965          2013            4        91999
55     3965          2013            5        90845
68     3965          2013            6        85870
81     3965          2013            7        94503
92     3965          2013            8        85998
103    3965          2013            9        85896
114    3965          2013           10        97674
125    3965          2013           11        81990
136    3965          2013           12        96163
5      3965          2014            1        72705
18     3965          2014            2        59422
31     3965          2014            3        56346
44     3965          2014            4        50688
57     3965          2014            5        45891
70     3965          2014            6        48463
83     3965          2014            7        48720
94     3965          2014            8        42523
105    3965          2014            9        41971
116    3965          2014           10        44368
127    3965          2014           11        34564
138    3965          2014           12        40704
8      3965          2015            1        30935
21     3965          2015            2        25549
34     3965          2015            3        31224
47     3965          2015            4        28616
60     3965          2015            5        27398
73     3965          2015            6        30336
86     3965          2015            7        21962
97     3965          2015            8        20230
108    3965          2015            9        21252
119    3965          2015           10        19357
130    3965          2015           11        18469
141    3965          2015           12        20381
11     3965          2016            1        13927
24     3965          2016            2        13911
37     3965          2016            3        15785
50     3965          2016            4        13781
63     3965          2016            5        15293
76     3965          2016            6         8679
> USBTP1<-ts(TruncData1$QuantitySold,start=c(2011,1),freq=12)
> class(USBTP1)
[1] "ts"
> acf(USBTP1)
> acf(diff(USBTP1))
> pacf(USBTP1)
> pacf(diff(USBTP1))
> USBTP1.ar<-ar(USBTP1,method="mle")
Warning message:
In arima0(x, order = c(i, 0L, 0L), include.mean = demean) :
  possible convergence problem: optim gave code = 1
> USBTP1.arima<-arima(USBTP1,order=c(0,1,1))
> USBTP1.arima

Call:
arima(x = USBTP1, order = c(0, 1, 1))

Coefficients:
          ma1
      -0.2754
s.e.   0.1079

sigma^2 estimated as 90136379:  log likelihood = -687.57,  aic = 1379.14
> USBTP1.predict<-predict(USBTP1.arima,n.ahead=12)
> USBTP1.predict
$pred
          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug
2016                                                       10419.42 10419.42
2017 10419.42 10419.42 10419.42 10419.42 10419.42 10419.42                  
          Sep      Oct      Nov      Dec
2016 10419.42 10419.42 10419.42 10419.42
2017                                    

$se
           Jan       Feb       Mar       Apr       May       Jun       Jul
2016                                                              9494.018
2017 19341.862 20528.911 21650.975 22717.686 23736.508 24713.363          
           Aug       Sep       Oct       Nov       Dec
2016 11724.544 13593.876 15235.551 16716.774 18077.032
2017                                                  

> library(forecast)
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: timeDate
This is forecast 6.2 

> ts.plot(USBTP1,USBTP1.predict$pred,lty=1:2,col=c("red","green"))
> USBTP1.actual<-window(USBTP1,start=c(2011,1),end=c(2015,11),freq=12)
> USBTP1.test<-window(USBTP1,start=c(2015,12))
> arima1 =auto.arima(USBTP1.actual)
> arima1
Series: USBTP1.actual 
ARIMA(1,1,0)(0,0,1)[12]                    

Coefficients:
          ar1    sma1
      -0.3247  0.2468
s.e.   0.1290  0.1562

sigma^2 estimated as 93833629:  log likelihood=-615.09
AIC=1236.17   AICc=1236.61   BIC=1242.35
> summary(arima1)
Series: USBTP1.actual 
ARIMA(1,1,0)(0,0,1)[12]                    

Coefficients:
          ar1    sma1
      -0.3247  0.2468
s.e.   0.1290  0.1562

sigma^2 estimated as 93833629:  log likelihood=-615.09
AIC=1236.17   AICc=1236.61   BIC=1242.35

Training set error measures:
                    ME     RMSE      MAE       MPE     MAPE      MASE
Training set -990.0269 9604.339 7048.021 -3.667603 11.70728 0.2856762
                    ACF1
Training set -0.02304528
> arima1.forecast=forecast.Arima(arima1,h=1)
> arima1.forecast
         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95
Dec 2015       18894.63 6480.525 31308.74 -91.1062 37880.37
> confrint(arima1)
Error: could not find function "confrint"
> confint(arima1)
           2.5 %      97.5 %
ar1  -0.57760614 -0.07174796
sma1 -0.05938031  0.55301109
> plot(arima1.forecast,xlab="years",ylab="QuantitySold")
> tsdata<-USBTP1.actual
> tsdata
        Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct
2011  72618  68024  92103  66307  73861  82774  80195  63635  55061  51745
2012  37672  69963  79185  82811  84138  82917  88374 101550  95066  96850
2013  83486  74144  86490  91999  90845  85870  94503  85998  85896  97674
2014  72705  59422  56346  50688  45891  48463  48720  42523  41971  44368
2015  30935  25549  31224  28616  27398  30336  21962  20230  21252  19357
        Nov    Dec
2011  53884  61343
2012 100456  98621
2013  81990  96163
2014  34564  40704
2015  18469       
> tsdataplus<-c(tsdata,arima1.forecast$mean)
> tsdataplus
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63
> arima1 =auto.arima(tsdataplus)
> arima2 =auto.arima(tsdataplus)
> arima1
Series: tsdataplus 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2737
s.e.   0.1132

sigma^2 estimated as 97825508:  log likelihood=-626.52
AIC=1257.04   AICc=1257.25   BIC=1261.19
> arima2
Series: tsdataplus 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2737
s.e.   0.1132

sigma^2 estimated as 97825508:  log likelihood=-626.52
AIC=1257.04   AICc=1257.25   BIC=1261.19
> arima2.forecast=forecast.Arima(arima2,h=1)
> arima2.forecast
   Point Forecast    Lo 80   Hi 80     Lo 95    Hi 95
61       18883.69 6208.273 31559.1 -501.6859 38269.06
> tsdata3<-c(tsdataplus,arima2.forecast$mean)
> tsdata3
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63  18883.69
> arima3 =auto.arima(tsdata3)
> arima3
Series: tsdata3 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2738
s.e.   0.1123

sigma^2 estimated as 96195022:  log likelihood=-636.63
AIC=1277.26   AICc=1277.47   BIC=1281.45
> arima3.forecast=forecast.Arima(arima3,h=1)
> arima3.forecast
   Point Forecast    Lo 80    Hi 80     Lo 95    Hi 95
62        18883.7 6314.358 31453.03 -339.4473 38106.84
> tsdata4<-c(tsdata3,arima3.forecast$mean)
> tsdata4
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63  18883.69  18883.70
> arima4 =auto.arima(tsdata4)
> arima4
Series: tsdata4 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2739
s.e.   0.1114

sigma^2 estimated as 94617998:  log likelihood=-646.74
AIC=1297.48   AICc=1297.68   BIC=1301.7
> arima4.forecast=forecast.Arima(arima4,h=1)
> arima4.forecast
   Point Forecast    Lo 80    Hi 80     Lo 95    Hi 95
63        18883.7 6417.817 31349.58 -181.2214 37948.62
> tsdata5<-c(tsdata4,arima4.forecast$mean)
> tsdata5
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63  18883.69  18883.70  18883.70
> arima5 =auto.arima(tsdata5)
> arima5
Series: tsdata5 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2739
s.e.   0.1105

sigma^2 estimated as 93091848:  log likelihood=-656.84
AIC=1317.67   AICc=1317.87   BIC=1321.92
> arima5.forecast=forecast.Arima(arima5,h=1)
> arima5.forecast
   Point Forecast    Lo 80    Hi 80     Lo 95    Hi 95
64        18883.7 6518.761 31248.64 -26.84097 37794.24
> tsdata6<-c(tsdata5,arima5.forecast$mean)
> tsdata6
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63  18883.69  18883.70  18883.70
[64]  18883.70
> arima5 =auto.arima(tsdata6)
> arima6 =auto.arima(tsdata6)
> arima6
Series: tsdata6 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2740
s.e.   0.1096

sigma^2 estimated as 91614150:  log likelihood=-666.92
AIC=1337.85   AICc=1338.05   BIC=1342.14
> arima6.forecast=forecast.Arima(arima6,h=1)
> arima6.forecast
   Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95
65        18883.7 6617.292 31150.11 123.8483 37643.55
> tsdata7<-c(tsdata6,arima6.forecast$mean)
> tsdata7
 [1]  72618.00  68024.00  92103.00  66307.00  73861.00  82774.00  80195.00
 [8]  63635.00  55061.00  51745.00  53884.00  61343.00  37672.00  69963.00
[15]  79185.00  82811.00  84138.00  82917.00  88374.00 101550.00  95066.00
[22]  96850.00 100456.00  98621.00  83486.00  74144.00  86490.00  91999.00
[29]  90845.00  85870.00  94503.00  85998.00  85896.00  97674.00  81990.00
[36]  96163.00  72705.00  59422.00  56346.00  50688.00  45891.00  48463.00
[43]  48720.00  42523.00  41971.00  44368.00  34564.00  40704.00  30935.00
[50]  25549.00  31224.00  28616.00  27398.00  30336.00  21962.00  20230.00
[57]  21252.00  19357.00  18469.00  18894.63  18883.69  18883.70  18883.70
[64]  18883.70  18883.70
> arima7 =auto.arima(tsdata7)
> arima7
Series: tsdata7 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2740
s.e.   0.1087

sigma^2 estimated as 90182632:  log likelihood=-677.01
AIC=1358.01   AICc=1358.21   BIC=1362.33
> arima7.forecast=forecast.Arima(arima7,h=1)
> arima7.forecast
   Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95
66        18883.7 6713.504 31053.89 270.9915 37496.41
> plot(arima7.forecast,xlab="years",ylab="QuantitySold")
> summary(arima1)
Series: tsdataplus 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2737
s.e.   0.1132

sigma^2 estimated as 97825508:  log likelihood=-626.52
AIC=1257.04   AICc=1257.25   BIC=1261.19

Training set error measures:
                    ME     RMSE     MAE       MPE     MAPE      MASE       ACF1
Training set -1228.797 9807.914 7275.21 -4.775529 12.61507 0.9695445 -0.0414481
> summary(arima2)
Series: tsdataplus 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2737
s.e.   0.1132

sigma^2 estimated as 97825508:  log likelihood=-626.52
AIC=1257.04   AICc=1257.25   BIC=1261.19

Training set error measures:
                    ME     RMSE     MAE       MPE     MAPE      MASE       ACF1
Training set -1228.797 9807.914 7275.21 -4.775529 12.61507 0.9695445 -0.0414481
> summary(arima3)
Series: tsdata3 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2738
s.e.   0.1123

sigma^2 estimated as 96195022:  log likelihood=-636.63
AIC=1277.26   AICc=1277.47   BIC=1281.45

Training set error measures:
                    ME     RMSE     MAE       MPE     MAPE      MASE
Training set -1208.757 9727.186 7155.97 -4.697589 12.40836 0.9697935
                    ACF1
Training set -0.04109214
> summary(arima4)
Series: tsdata4 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2739
s.e.   0.1114

sigma^2 estimated as 94617998:  log likelihood=-646.74
AIC=1297.48   AICc=1297.68   BIC=1301.7

Training set error measures:
                    ME     RMSE      MAE       MPE     MAPE      MASE
Training set -1189.361 9648.419 7040.576 -4.622154 12.20833 0.9700576
                    ACF1
Training set -0.04075627
> summary(arima5)
Series: tsdata6 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2740
s.e.   0.1096

sigma^2 estimated as 91614150:  log likelihood=-666.92
AIC=1337.85   AICc=1338.05   BIC=1342.14

Training set error measures:
                    ME    RMSE      MAE       MPE   MAPE      MASE        ACF1
Training set -1152.377 9496.46 6820.605 -4.478325 11.827 0.9705612 -0.04011662
> summary(arima6)
Series: tsdata6 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2740
s.e.   0.1096

sigma^2 estimated as 91614150:  log likelihood=-666.92
AIC=1337.85   AICc=1338.05   BIC=1342.14

Training set error measures:
                    ME    RMSE      MAE       MPE   MAPE      MASE        ACF1
Training set -1152.377 9496.46 6820.605 -4.478325 11.827 0.9705612 -0.04011662
> summary(arima7)
Series: tsdata7 
ARIMA(0,1,1)                    

Coefficients:
          ma1
      -0.2740
s.e.   0.1087

sigma^2 estimated as 90182632:  log likelihood=-677.01
AIC=1358.01   AICc=1358.21   BIC=1362.33

Training set error measures:
                    ME     RMSE      MAE       MPE     MAPE      MASE
Training set -1134.734 9423.125 6715.694 -4.409716 11.64514 0.9708013
                    ACF1
Training set -0.03981184
> 
